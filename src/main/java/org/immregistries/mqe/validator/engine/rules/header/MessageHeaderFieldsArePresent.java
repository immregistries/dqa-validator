package org.immregistries.mqe.validator.engine.rules.header;

import java.util.ArrayList;
import java.util.List;
import org.immregistries.mqe.validator.detection.Detection;
import org.immregistries.mqe.validator.detection.ImplementationDetail;
import org.immregistries.mqe.validator.detection.ValidationReport;
import org.immregistries.mqe.validator.engine.ValidationRule;
import org.immregistries.mqe.validator.engine.ValidationRuleResult;
import org.immregistries.mqe.vxu.MqeMessageHeader;
import org.immregistries.mqe.vxu.MqeMessageReceived;

public class MessageHeaderFieldsArePresent extends ValidationRule<MqeMessageHeader> {

  @Override
  protected final Class[] getDependencies() {
    return new Class[] {
        // PatientExists.class,
    };
  }

  public MessageHeaderFieldsArePresent() {
    {
      ImplementationDetail id =
          this.addRuleDetection(Detection.MessageReceivingApplicationIsMissing);
      id.setImplementationDescription("Message Receiving Application is not indicated");
      id.setHowToFix("Contact the IIS and request the correct identifier to use for Receiving Application and ensure that the sending system is configured to send this value in MSH-5. ");
      id.setWhyToFix("Correctly identifying the receiving application will ensure that the message is routed to the correct destination.");
    }
    {
      ImplementationDetail id = this.addRuleDetection(Detection.MessageReceivingFacilityIsMissing);
      id.setImplementationDescription("Message Receiving Facility is not indicated");
      id.setHowToFix("Contact the IIS and request the correct identifier to use for Receiving Facility and ensure that the sending system is configured to send this value in MSH-6. ");
      id.setWhyToFix("Correctly identifying the receiving facility will ensure that the message is routed to the correct destination.");
    }
    {
      ImplementationDetail id = this.addRuleDetection(Detection.MessageSendingApplicationIsMissing);
      id.setImplementationDescription("Message Sending Application is not indicated");
      id.setHowToFix("Contact the IIS and request the correct identifier to use for Sending Application and ensure that the sending system is configured to send this value in MSH-4. ");
      id.setWhyToFix("Correctly identifying the sending application will ensure that the vaccinations are recorded under the correct submitter. ");
    }
    {
      ImplementationDetail id = this.addRuleDetection(Detection.MessageMessageControlIdIsMissing);
      id.setImplementationDescription("Message Control Id is not indicated");
      id.setHowToFix("The problem is in the format of the HL7 message being sent. Please contact your software vendor to fix this issue. HL7 requires the submitting system to generate a unique value for this field and it was not generated. ");
      id.setWhyToFix("The HL7 standard requires this field to be generated by the submitting system in order to aid in identifying this message uniquely from all messages sent by a submitter in a given day. This generated ID can be used to associate acknowledgements with the original request or to find previously submitted messages for manual review. ");
    }
    {
      ImplementationDetail id = this.addRuleDetection(Detection.MessageAcceptAckTypeIsMissing);
      id.setImplementationDescription("Message Accept Acknowledgment Type is missing");
      id.setHowToFix("The problem is in the format of the HL7 message being sent. Please contact your software vendor to fix this issue. ");
      id.setWhyToFix("The HL7 standard requires all submitters to indicate what type of responses are wanted. Without this information the receiving system will not know what type of Acknowledgment message to send back. ");
    }
    {
      ImplementationDetail id = this.addRuleDetection(Detection.MessageAppAckTypeIsMissing);
      id.setImplementationDescription("Message Application Acknowledgment Type is missing");
      id.setHowToFix("The problem is in the format of the HL7 message being sent. Please contact your software vendor to fix this issue.");
      id.setWhyToFix("The HL7 standard requires all submitters to indicate what type of responses are wanted. Without this information the receiving system will not know what type of Acknowledgment message to send back. ");
    }
  }

  @Override
  protected ValidationRuleResult executeRule(MqeMessageHeader target, MqeMessageReceived mr) {

    List<ValidationReport> issues = new ArrayList<ValidationReport>();
    boolean passed = true;

    if (this.common.isEmpty(target.getReceivingApplication())) {
      issues.add(Detection.MessageReceivingApplicationIsMissing.build(target));
    }
    if (this.common.isEmpty(target.getReceivingFacility())) {
      issues.add(Detection.MessageReceivingFacilityIsMissing.build(target));
    }
    if (this.common.isEmpty(target.getSendingApplication())) {
      issues.add(Detection.MessageSendingApplicationIsMissing.build(target));
    }
    if (this.common.isEmpty(target.getMessageControl())) {
      issues.add(Detection.MessageMessageControlIdIsMissing.build(target));
    }

    if (this.common.isEmpty(target.getAckTypeAcceptCode())) {
      issues.add(Detection.MessageAcceptAckTypeIsMissing.build(target));
    }

    if (this.common.isEmpty(target.getAckTypeApplicationCode())) {
      issues.add(Detection.MessageAppAckTypeIsMissing.build(target));
    }
    // if (this.common.isEmpty(target.getSendingRespOrg())) {
    // issues.add(MessageAttribute.MessageSendingResponsibleOrganizationIsMissing.build(target));
    // }

    passed = issues.isEmpty();
    return buildResults(issues, passed);
  }


}
